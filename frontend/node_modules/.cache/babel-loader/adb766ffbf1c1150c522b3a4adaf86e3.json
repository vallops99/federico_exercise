{"ast":null,"code":"var _jsxFileName = \"/Users/valeriofarrotti/Projects/federico_exercise/src/components/ToggleButton/ToggleButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { ThemeContext } from \"../../utils\";\nimport { useCallback, useContext } from \"react\";\nimport './ToggleButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ToggleButton() {\n  _s();\n\n  const {\n    theme,\n    setTheme\n  } = useContext(ThemeContext);\n  const onThemeChange = useCallback(value => {\n    setTheme(value ? 'light' : 'dark');\n  }, [setTheme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggle-switch\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle-input\",\n        type: \"checkbox\",\n        name: \"checkbox\",\n        onChange: event => onThemeChange(event.currentTarget.checked),\n        checked: theme === \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToggleButton, \"hZJAKKPuwQ6zjeNOeZMqciMiaEo=\");\n\n_c = ToggleButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleButton\");","map":{"version":3,"names":["ThemeContext","useCallback","useContext","ToggleButton","theme","setTheme","onThemeChange","value","event","currentTarget","checked"],"sources":["/Users/valeriofarrotti/Projects/federico_exercise/src/components/ToggleButton/ToggleButton.tsx"],"sourcesContent":["import { ThemeContext } from \"../../utils\";\nimport { useCallback, useContext } from \"react\";\n\nimport './ToggleButton.css';\n\n\nexport function ToggleButton() {\n    const { theme, setTheme } = useContext(ThemeContext);\n\n    const onThemeChange = useCallback((value : boolean) => {\n        setTheme(value ? 'light' : 'dark');\n    }, [setTheme]);\n\n    return (\n        <div className=\"toggle-switch\">\n            <label>\n                <input\n                    className=\"toggle-input\"\n                    type=\"checkbox\"\n                    name=\"checkbox\"\n                    onChange={(event) => onThemeChange(event.currentTarget.checked)}\n                    checked={theme === \"light\"}\n                />\n                <span className=\"slider\"></span>\n            </label>\n        </div>\n    );\n}"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,aAA7B;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;AAEA,OAAO,oBAAP;;AAGA,OAAO,SAASC,YAAT,GAAwB;EAAA;;EAC3B,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAsBH,UAAU,CAACF,YAAD,CAAtC;EAEA,MAAMM,aAAa,GAAGL,WAAW,CAAEM,KAAD,IAAqB;IACnDF,QAAQ,CAACE,KAAK,GAAG,OAAH,GAAa,MAAnB,CAAR;EACH,CAFgC,EAE9B,CAACF,QAAD,CAF8B,CAAjC;EAIA,oBACI;IAAK,SAAS,EAAC,eAAf;IAAA,uBACI;MAAA,wBACI;QACI,SAAS,EAAC,cADd;QAEI,IAAI,EAAC,UAFT;QAGI,IAAI,EAAC,UAHT;QAII,QAAQ,EAAGG,KAAD,IAAWF,aAAa,CAACE,KAAK,CAACC,aAAN,CAAoBC,OAArB,CAJtC;QAKI,OAAO,EAAEN,KAAK,KAAK;MALvB;QAAA;QAAA;QAAA;MAAA,QADJ,eAQI;QAAM,SAAS,EAAC;MAAhB;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH;;GArBeD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}